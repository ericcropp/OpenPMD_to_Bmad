name: CI

on:
    push:
        branches:
          - master
    pull_request:
        branches:
          - master
        
    
jobs:


  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: true 
  #     - name: Install Git LFS
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y git-lfs
  #         git lfs install
  #     - name: Fetch Git LFS files
  #       run: git lfs pull  
  run-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: 
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
                    
    name: Test
    runs-on: ${{matrix.os}}
       
    steps:

      # - name: Setup Mambaforge
      #   uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     miniforge-variant: Mambaforge
      #     miniforge-version: latest
      #     activate-environment: test-dev
      #     use-mamba: true
      #     python-version: ${{ matrix.python-version }}

      - uses: actions/checkout@v3

      # - name: Get Date
      #   id: get-date
      #   run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
      #   shell: bash

      # - name: Cache Conda env
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ env.CONDA }}/envs
      #     key:
      #       conda-${{ runner.os }}--${{ runner.arch }}--${{ github.workflow }}--${{
      #       steps.get-date.outputs.today }}--${{
      #       hashFiles('environment.yml') }}--${{ env.CACHE_NUMBER }}--${{ matrix.python-version }}
      #   env:
      #     CACHE_NUMBER: 0
      #   id: cache

      # - name: Setup Mambaforge for real if not cached
      #   uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     miniforge-variant: Mambaforge
      #     miniforge-version: latest
      #     activate-environment: test-dev
      #     use-mamba: true
      #     python-version: ${{ matrix.python-version }}
      #     environment-file: environment.yml
      #   if: steps.cache.outputs.cache-hit != 'true'

      # - name: setup python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{matrix.python-version}}
            
      # - name: Install dependencies
      #   run: |
      #       python -m pip install pytest

            
      - name: Run tests

        run: |
            $CONDA/bin/conda env update --file environment.yml --name base
            $CONDA/bin/conda install pytest
            $CONDA/bin/pytest test.py
        
                    
